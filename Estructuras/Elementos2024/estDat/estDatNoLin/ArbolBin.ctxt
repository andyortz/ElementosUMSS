#BlueJ class context
comment0.target=ArbolBin
comment1.params=
comment1.target=ArbolBin()
comment10.params=dato
comment10.target=void\ insertar(java.lang.Object)
comment10.text=\r\n\ Por\ Amplitud\ dado\ del\ Dato\r\n
comment11.params=dato\ cola
comment11.target=void\ insertar(java.lang.Object,\ estDat.estDatLin.Cola)
comment12.params=dato
comment12.target=void\ insertar2(java.lang.Object)
comment13.params=
comment13.target=estDat.estDatLin.Lista\ amplitud()
comment14.params=cola\ res
comment14.target=void\ amplitud(estDat.estDatLin.Cola,\ estDat.estDatLin.Lista)
comment15.params=
comment15.target=boolean\ raizHoja()
comment16.params=dato
comment16.target=java.lang.Object\ eliminar(java.lang.Object)
comment16.text=\r\n\ elimina\ el\ dato\ ingresado,\ te\ devuelve\ null\ si\ no\ lo\ encontro\ o\ si\ ese\ dato\ \r\n\ \ tiene\ dependencia\ de\ datos,\ te\ devuelve\ el\ dato\ si\ logr\u00F3\ eliminarlo\ solo\ si\r\n\ \ el\ dato\ es\ hoja.\r\n\ \ @param\ el\ dato\ a\ eliminar\r\n\ \ @return\ el\ dato\ eliminado\r\n
comment17.params=dato
comment17.target=boolean\ eliminarDescendencia(java.lang.Object)
comment18.params=dato
comment18.target=java.lang.Object\ acceder(java.lang.Object)
comment19.params=dato
comment19.target=boolean\ contiene(java.lang.Object)
comment2.params=dato
comment2.target=ArbolBin(java.lang.Object)
comment20.params=dato
comment20.target=int\ altura(java.lang.Object)
comment21.params=dato
comment21.target=ArbolBin\ buscarArbol(java.lang.Object)
comment22.params=
comment22.target=int\ altura()
comment23.params=n
comment23.target=estDat.estDatLin.Lista\ acceder(int)
comment24.params=i\ n\ res
comment24.target=void\ acceder(int,\ int,\ estDat.estDatLin.Lista)
comment25.params=
comment25.target=java.lang.Object\ getRaiz()
comment26.params=
comment26.target=ArbolBin\ getIzq()
comment27.params=
comment27.target=ArbolBin\ getDer()
comment28.params=arbol
comment28.target=ArbolBin\ arbolPadre(ArbolBin)
comment29.params=datoHoja
comment29.target=estDat.estDatLin.Lista\ rama(java.lang.Object)
comment3.params=izq\ raiz\ der
comment3.target=ArbolBin(ArbolBin,\ java.lang.Object,\ ArbolBin)
comment30.params=res\ hoja\ padre\ original
comment30.target=void\ rama(estDat.estDatLin.Lista,\ ArbolBin,\ ArbolBin,\ ArbolBin)
comment31.params=datoHoja
comment31.target=estDat.estDatLin.Lista\ otraRama(java.lang.Object)
comment32.params=res\ datoHoja
comment32.target=void\ otraRama(estDat.estDatLin.Lista,\ java.lang.Object)
comment33.params=dato1\ dato2
comment33.target=estDat.estDatLin.Lista\ camino(java.lang.Object,\ java.lang.Object)
comment33.text=\r\n\ \ busca\ el\ camino\ de\ un\ dato1\ y\ un\ dato2\ conectadonse\ con\ el\ pariente\ mas\ cercano\r\n\ \ devuelve\ una\ lista\ vacia\ si\ estos\ datos\ no\ existen\r\n
comment34.params=a\ b\ res\ dato1\ dato2
comment34.target=void\ camino(ArbolBin,\ ArbolBin,\ estDat.estDatLin.Lista,\ java.lang.Object,\ java.lang.Object)
comment35.params=dato
comment35.target=estDat.estDatLin.Lista\ camino(java.lang.Object)
comment36.params=res\ dato
comment36.target=void\ camino(estDat.estDatLin.Lista,\ java.lang.Object)
comment37.params=dato
comment37.target=estDat.estDatLin.Lista\ sobrinos(java.lang.Object)
comment38.params=n
comment38.target=estDat.estDatLin.Lista\ arbolNivel(int)
comment39.params=i\ n\ res
comment39.target=void\ arbolNivel(int,\ int,\ estDat.estDatLin.Lista)
comment4.params=otro
comment4.target=ArbolBin(ArbolBin)
comment40.params=q
comment40.target=int\ nivel(ArbolBin)
comment41.params=dato
comment41.target=int\ nivel(java.lang.Object)
comment42.params=
comment42.target=estDat.estDatLin.Lista\ recolectarHojas()
comment43.params=res
comment43.target=void\ recolectarHojas(estDat.estDatLin.Lista)
comment44.params=otro
comment44.target=boolean\ sonSemejantes(ArbolBin)
comment45.params=a\ b
comment45.target=boolean\ sonSemejantes(ArbolBin,\ ArbolBin)
comment46.params=
comment46.target=boolean\ nodosCompletos()
comment47.params=
comment47.target=boolean\ esBalanceado()
comment48.params=
comment48.target=estDat.estDatLin.Lista\ accederXNiv()
comment49.params=n\ ll
comment49.target=void\ accederXNiv(int,\ estDat.estDatLin.Lista)
comment5.params=
comment5.target=boolean\ vacia()
comment50.params=otro
comment50.target=boolean\ igualdadDeBordes(ArbolBin)
comment51.params=
comment51.target=estDat.estDatLin.Lista\ ramas()
comment52.params=
comment52.target=boolean\ simetrico()
comment53.params=actIzq\ actDer
comment53.target=boolean\ simetrico(ArbolBin,\ ArbolBin)
comment54.params=altura
comment54.target=void\ podar(int)
comment55.params=altura\ act\ nivelAct
comment55.target=void\ podar(int,\ ArbolBin,\ int)
comment56.params=
comment56.target=estDat.estDatLin.Lista\ frontera()
comment57.params=
comment57.target=estDat.estDatLin.Pila\ preordenInvMod()
comment58.params=res\ act
comment58.target=void\ preordenInvMod(estDat.estDatLin.Pila,\ ArbolBin)
comment59.params=res\ act
comment59.target=boolean\ preordenMod(estDat.estDatLin.ListaSE,\ ArbolBin)
comment6.params=dato\ ruta
comment6.target=boolean\ insertar(java.lang.Object,\ estDat.estDatLin.Lista)
comment6.text=\r\n\ Por\ Profundidad\ y\ ruta\r\n
comment60.params=dato
comment60.target=estDat.estDatLin.Lista\ recogerTodos(java.lang.Object)
comment61.params=dato\ lista
comment61.target=void\ recogerTodos(java.lang.Object,\ estDat.estDatLin.ListaSE)
comment7.params=dato\ ruta
comment7.target=boolean\ insertar2(java.lang.Object,\ estDat.estDatLin.Lista)
comment8.params=dato\ ruta\ i
comment8.target=boolean\ insertar2(java.lang.Object,\ estDat.estDatLin.Lista,\ int)
comment9.params=dato\ ruta
comment9.target=boolean\ insertar3(java.lang.Object,\ estDat.estDatLin.Lista)
numComments=62

#BlueJ class context
comment0.target=ListaSE
comment1.params=
comment1.target=ListaSE()
comment10.params=pos
comment10.target=java.lang.Object\ eliminar(int)
comment10.text=\r\n\ elimina\ el\ dato\ en\ la\ posicion\ pos,\ en\ caso\ de\ existir\ y\ ademas\ te\ devuelve\ el\ dato\ eliminado\r\n\ @param\ pos\ es\ un\ entero\ positivo\ inlucido\ el\ 0\r\n\ @return\ el\ dato\ eliminado\ si\ existiera\r\n
comment11.params=
comment11.target=java.lang.Object\ eliminarUlt()
comment12.params=
comment12.target=void\ vaciar()
comment12.text=\r\n\ elimina\ todos\ los\ elementos\ de\ la\ lista\r\n
comment13.params=pos
comment13.target=java.lang.Object\ acceder(int)
comment13.text=\r\n\ Te\ devuelve\ el\ dato\ en\ la\ posicion\ posicion\ pos,\ en\ caso\ de\ existir\r\n\ @param\ pos\ es\ un\ entero\ positivo\ incluido\ el\ 0\r\n\ @return\ el\ dato\ al\ que\ se\ desea\ acceder\ si\ existiera\r\n
comment14.params=dato
comment14.target=java.lang.Object\ acceder(java.lang.Object)
comment14.text=\r\n\ Devuelve\ el\ dato\ que\ cumple\ la\ igual\ del\ dato\ de\ parametro,\ en\ caso\ de\ existir.\r\n\ @param\ dato\ a\ acceder\ de\ clase\ T\r\n\ @return\ el\ dato\ al\ que\ se\ desea\ acceder\ si\ existiera\r\n
comment15.params=desde\ hasta
comment15.target=ListaSE\ acceder(int,\ int)
comment15.text=\r\n\ @param\ enteros\ positivos\ incluido\ el\ 0\r\n\ @return\ la\ Lista\ desde\ la\ posicion\ "desde"\ hasta\ las\ pocion\ "hasta"-1\r\n
comment16.params=desde\ hasta\ res\ ant
comment16.target=void\ rellenar(int,\ int,\ Lista,\ ListaSE)
comment17.params=dato
comment17.target=boolean\ buscar(java.lang.Object)
comment17.text=\r\n\ busca\ el\ dato,\ en\ caso\ de\ existir\ devuelve\ true\r\n\ @param\ dato\ a\ buscar\ de\ clase\ T\r\n
comment18.params=dato
comment18.target=int\ indiceDe(java.lang.Object)
comment18.text=\r\n\ busca\ el\ dato\r\n\ @param\ dato\ a\ buscar\ de\ clase\ T\r\n\ @return\ posicion\ del\ dato\ en\ caso\ de\ existir,\ -1\ en\ caso\ de\ no\ existir\r\n
comment19.params=
comment19.target=int\ longitud()
comment19.text=\r\n\ permite\ saber\ la\ longitud\ de\ la\ Lista\r\n
comment2.params=ini\ sig
comment2.target=ListaSE(java.lang.Object,\ ListaSE)
comment20.params=i\ j
comment20.target=boolean\ intercambiar(int,\ int)
comment20.text=\r\n\ busca\ el\ dato\ en\ la\ posicion\ i\ por\ el\ dato\ en\ la\ posicion\ j\r\n\ @param\ enteros\ positivos\ inluidos\ el\ 0\r\n\ @return\ true\ si\ ambos\ datos\ existen,\ false\ si\ al\ menos\ uno\ de\ los\ datos\ no\ existe\r\n
comment21.params=dato\ pos
comment21.target=void\ reemplazar(java.lang.Object,\ int)
comment21.text=\r\n\ reemplaza\ el\ dato\ de\ la\ posicion\ pos\r\n\ @param\ dato\ de\ clase\ T,\ que\ reemplazara\ al\ dato\ de\ la\ posicion\ pos,\ en\ caso\ de\ no\ existir\ lo\ a\u00F1ade\ al\ final\ de\ la\ lista,\r\n\ \ \ \ \ \ \ \ pos\ entero\ positivo\ incluido\ el\ 0\r\n\ @return\ nada\r\n
comment22.params=pos1\ pos2
comment22.target=boolean\ compararDatos(int,\ int)
comment22.text=\r\n\ compara\ dos\ datos\ ubicados\ en\ las\ posiciones\ pos1\ y\ pos2\r\n\ @param\ enteros\ positivos\ incluidos\ el\ 0\ <\ longitud\ de\ la\ Lista\r\n\ @return\ true\ si\ los\ datos\ de\ clase\ T\ en\ las\ posiciones\ pos\ son\ iguales,\ false\ si\ no\ lo\ son\ y\ ademas\ si\ uno\ de\ las\ posiciones\ no\ existen\r\n
comment23.params=dato
comment23.target=int\ contarOcurrencias(java.lang.Object)
comment23.text=\r\n\ busca\ todas\ las\ ocurrencias\ del\ dato\ en\ caso\ de\ existir\r\n\ @param\ dato\ de\ clase\ T\ a\ buscar\r\n\ @return\ la\ cant\ de\ ocurrencias\ del\ dato\ en\ caso\ de\ exitir,\ 0\ en\ caso\ de\ no\ existir\r\n
comment24.params=lista\ dato
comment24.target=int\ contarOcurrencias(ListaSE,\ java.lang.Object)
comment25.params=otraLista
comment25.target=boolean\ equals(Lista)
comment25.text=\r\n\ compara\ la\ Lista\ original\ con\ otra\ lista\r\n\ @param\ Lista\ de\ clase\ T\r\n\ @return\ true\ si\ ambas\ listas\ son\ iguales\ en\ cada\ posicion\r\n
comment26.params=
comment26.target=Lista\ clonar()
comment26.text=\r\n\ te\ devuelve\ una\ Lista\ igual\ a\ la\ Lista\ original\r\n
comment27.params=
comment27.target=void\ invertir()
comment27.text=\r\n\ revierte\ la\ Lista\ \r\n
comment28.params=
comment28.target=void\ invertirEnlace()
comment29.params=lista
comment29.target=ListaSE\ ultimo(ListaSE)
comment3.params=
comment3.target=boolean\ vacia()
comment3.text=\r\n\ permite\ saber\ el\ estado\ actual\ de\ la\ lista\r\n
comment30.params=otra
comment30.target=boolean\ concatenar(ListaSE)
comment31.params=
comment31.target=ListaSE\ dividir()
comment32.params=
comment32.target=java.lang.String\ toString()
comment32.text=\r\n\ Devuelve\ una\ representacion\ de\ String\ del\ contenido\ de\ la\ Lista\r\n
comment4.params=dato
comment4.target=void\ insertar(java.lang.Object)
comment4.text=\r\n\ insertar\ el\ dato\ al\ final\ de\ la\ lista\r\n\ @param\ dato\ a\ insertar\ de\ clase\ T\r\n\ @return\ nada\r\n
comment5.params=dato\ pos
comment5.target=void\ insertar(java.lang.Object,\ int)
comment5.text=\r\n\ inserta\ dato\ en\ la\ posicion\ pos,\ si\ ya\ hay\ un\ dato\ en\ esa\ posicion\ lo\ recorre\ una\ posicion\r\n\ @param\ dato\ de\ clase\ T\ a\ insertar\r\n\ @param\ pos\ en\ la\ que\ se\ quiere\ insertar\ pos>\=0\ entero\r\n\ @return\ nada\r\n
comment6.params=dato
comment6.target=void\ insertarIni(java.lang.Object)
comment7.params=otraLista
comment7.target=void\ insertarTodo(Lista)
comment7.text=\r\n\ inserta\ toda\ una\ Lista\ al\ final\ de\ la\ Lista\ original\r\n\ @param\ Lista\ de\ clase\ T\ a\ insertar\ en\ la\ Lista\ original\r\n\ @return\ nada\r\n
comment8.params=dato
comment8.target=java.lang.Object\ eliminar(java.lang.Object)
comment8.text=\r\n\ elimina\ el\ primer\ dato\ igual\ al\ dato\ que\ cumple\ la\ igualdad\ del\ dato\ de\ parametro,\ en\ caso\ de\ existir\ y\ ademas\ te\ devuelve\ el\ dato\ eliminado\r\n\ @param\ dato\ a\ buscar\ de\ clase\ T\ \r\n\ @return\ el\ dato\ eliminado\ si\ existiera\r\n
comment9.params=dato
comment9.target=void\ eliminarTodas(java.lang.Object)
comment9.text=\r\n\ elimina\ las\ ocurrencias\ del\ dato\ en\ caso\ de\ existir\ y\ ademas\ te\ devuelve\ el\ dato\ eliminado\r\n\ @param\ dato\ a\ buscar\ de\ clase\ T\ \r\n\ @return\ nada\r\n
numComments=33
